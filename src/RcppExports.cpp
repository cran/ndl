// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// learn
List learn(std::string data, const bool RemoveDuplicates, const bool verbose, const size_t MaxEvents, const bool addBackground);
RcppExport SEXP ndl_learn(SEXP dataSEXP, SEXP RemoveDuplicatesSEXP, SEXP verboseSEXP, SEXP MaxEventsSEXP, SEXP addBackgroundSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    std::string data = Rcpp::as<std::string >(dataSEXP);
    bool RemoveDuplicates = Rcpp::as<bool >(RemoveDuplicatesSEXP);
    bool verbose = Rcpp::as<bool >(verboseSEXP);
    size_t MaxEvents = Rcpp::as<size_t >(MaxEventsSEXP);
    bool addBackground = Rcpp::as<bool >(addBackgroundSEXP);
    List __result = learn(data, RemoveDuplicates, verbose, MaxEvents, addBackground);
    return Rcpp::wrap(__result);
END_RCPP
}
// learnLegacy
List learnLegacy(SEXP DFin, const bool RemoveDuplicates, const bool verbose);
RcppExport SEXP ndl_learnLegacy(SEXP DFinSEXP, SEXP RemoveDuplicatesSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    SEXP DFin = Rcpp::as<SEXP >(DFinSEXP);
    bool RemoveDuplicates = Rcpp::as<bool >(RemoveDuplicatesSEXP);
    bool verbose = Rcpp::as<bool >(verboseSEXP);
    List __result = learnLegacy(DFin, RemoveDuplicates, verbose);
    return Rcpp::wrap(__result);
END_RCPP
}
